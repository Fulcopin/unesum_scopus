[{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\App.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":23,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/App.js\n\nimport React, { useState } from 'react';\nimport { message } from 'antd';\nimport Dashboard from './components/Dashboard';\nimport Login from './components/Login';\nimport './App.css';\n\nconst App = () => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    const handleLoginSuccess = () => {\n        setIsAuthenticated(true);\n        message.success(\"Inicio de sesión exitoso.\");\n    };\n\n    const handleLogout = () => {\n        setIsAuthenticated(false);\n        message.info(\"Sesión cerrada.\");\n    };\n\n    return (\n        <div className=\"app-container\">\n            {isAuthenticated ? (\n                <Dashboard onLogout={handleLogout} />\n            ) : (\n                <div style={{ maxWidth: '400px', margin: 'auto', paddingTop: '100px' }}>\n                    <Login onLoginSuccess={handleLoginSuccess} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\App.test.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":5,"column":10,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\api\\scopusApi.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\ArticleSearch.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":43,"column":30,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Input, Button, Select, Form, Table, message, Card } from 'antd';\r\nimport axios from 'axios'; // Importa Axios directamente\r\n\r\nconst { Option } = Select;\r\n\r\nconst ArticleSearch = () => {\r\n    const [searchType, setSearchType] = useState('autor');\r\n    const [source, setSource] = useState('scielo');\r\n    const [query, setQuery] = useState('');\r\n    const [results, setResults] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSearch = async () => {\r\n        if (!query) {\r\n            message.warning('Por favor, ingresa un término de búsqueda.');\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        try {\r\n            // Realiza la solicitud directamente usando Axios\r\n            const response = await axios.get(`http://localhost:5000/api/search/${source}`, { \r\n                params: { searchType, query },\r\n                headers: { 'Content-Type': 'application/json' } \r\n            });\r\n            setResults(response.data);\r\n        } catch (error) {\r\n            console.error(\"Error en la búsqueda:\", error);\r\n            message.error(\"Ocurrió un error al realizar la búsqueda.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        { title: 'Título', dataIndex: 'title', key: 'title', width: '30%' },\r\n        { title: 'Resumen', dataIndex: 'abstract', key: 'abstract', width: '50%' },\r\n        {\r\n            title: 'Enlace',\r\n            dataIndex: 'url',\r\n            key: 'url',\r\n            render: (url) => <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">Leer más</a>,\r\n            width: '20%',\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Card\r\n            title=\"Búsqueda de Artículos Académicos\"\r\n            style={{ borderRadius: '8px', boxShadow: '0px 4px 12px rgba(0, 0, 0, 0.1)', marginBottom: '24px' }}\r\n        >\r\n            <Form layout=\"inline\" style={{ marginBottom: 16 }}>\r\n                <Form.Item label=\"Tipo de búsqueda\">\r\n                    <Select \r\n                        value={searchType} \r\n                        onChange={(value) => setSearchType(value)} \r\n                        style={{ width: 180 }}\r\n                    >\r\n                        <Option value=\"autor\">Autor</Option>\r\n                        <Option value=\"doi\">DOI</Option>\r\n                        <Option value=\"nombre\">Nombre</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item label=\"Fuente\">\r\n                    <Select \r\n                        value={source} \r\n                        onChange={(value) => setSource(value)} \r\n                        style={{ width: 180 }}\r\n                    >\r\n                        <Option value=\"scielo\">Scielo</Option>\r\n                        <Option value=\"crossref\">CrossRef</Option>\r\n                        <Option value=\"openaire\">OpenAIRE</Option>\r\n                        <Option value=\"core\">CORE</Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Input\r\n                        placeholder=\"Término de búsqueda\"\r\n                        value={query}\r\n                        onChange={(e) => setQuery(e.target.value)}\r\n                        style={{ width: 200 }}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" onClick={handleSearch} loading={loading} style={{ backgroundColor: '#1890ff', borderColor: '#1890ff' }}>\r\n                        Buscar\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            <Table\r\n                columns={columns}\r\n                dataSource={results}\r\n                rowKey={(record) => record.url || record.title}\r\n                loading={loading}\r\n                pagination={{ pageSize: 5 }}\r\n                style={{ marginTop: '16px' }}\r\n                bordered\r\n            />\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ArticleSearch;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\BookResults.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":6,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/BookResults.js\r\nimport React from 'react';\r\n\r\nconst BookResults = ({ results }) => {\r\n    return (\r\n        <div>\r\n            <h3>Resultados de Búsqueda</h3>\r\n            {results.googleBooks && (\r\n                <div>\r\n                    <h4>Google Books</h4>\r\n                    <p><strong>Título:</strong> {results.googleBooks.title}</p>\r\n                    <p><strong>Autor:</strong> {results.googleBooks.authors?.join(', ')}</p>\r\n                    <p><strong>Editorial:</strong> {results.googleBooks.publisher}</p>\r\n                    <p><strong>Fecha de Publicación:</strong> {results.googleBooks.publishedDate}</p>\r\n                </div>\r\n            )}\r\n            {results.openLibrary && (\r\n                <div>\r\n                    <h4>Open Library</h4>\r\n                    <p><strong>Título:</strong> {results.openLibrary.title}</p>\r\n                    <p><strong>Autor:</strong> {results.openLibrary.authors?.map(author => author.name).join(', ')}</p>\r\n                    <p><strong>Editorial:</strong> {results.openLibrary.publishers?.map(p => p.name).join(', ')}</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookResults;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\CreateUser.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":39,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/CreateUser.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Input, Button, message, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst CreateUser = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [role, setRole] = useState('user');\r\n\r\n    const handleCreateUser = async () => {\r\n        if (!username || !password) {\r\n            message.warning('Por favor, completa todos los campos.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem('token'); // Token JWT de la sesión de administrador\r\n            await axios.post(\r\n                'http://localhost:5000/api/auth/create-user',\r\n                { username, password, role },\r\n                {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                }\r\n            );\r\n            message.success(`Usuario ${username} creado exitosamente.`);\r\n            setUsername('');\r\n            setPassword('');\r\n            setRole('user');\r\n        } catch (error) {\r\n            message.error('Error al crear el usuario.');\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Crear Nuevo Usuario</h2>\r\n            <Input\r\n                placeholder=\"Nombre de usuario\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                style={{ marginBottom: '10px' }}\r\n            />\r\n            <Input.Password\r\n                placeholder=\"Contraseña\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                style={{ marginBottom: '10px' }}\r\n            />\r\n            <Select\r\n                value={role}\r\n                onChange={(value) => setRole(value)}\r\n                style={{ width: '100%', marginBottom: '10px' }}\r\n            >\r\n                <Option value=\"user\">Usuario</Option>\r\n                <Option value=\"admin\">Administrador</Option>\r\n            </Select>\r\n            <Button type=\"primary\" onClick={handleCreateUser}>\r\n                Crear Usuario\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateUser;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\CreateUserForm.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":26,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/CreateUserForm.js\r\nimport React, { useState } from 'react';\r\nimport { Button, Input, Form, message, Select } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst CreateUserForm = ({ token }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleCreateUser = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.post(\r\n                'http://localhost:5000/api/auth/create-user',\r\n                values,\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n            message.success(response.data.message);\r\n        } catch (error) {\r\n            message.error('Error al crear usuario');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onFinish={handleCreateUser} style={{ maxWidth: '300px', margin: '0 auto' }}>\r\n            <Form.Item name=\"username\" rules={[{ required: true, message: 'Ingrese el nombre de usuario' }]}>\r\n                <Input placeholder=\"Nombre de Usuario\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Ingrese la contraseña' }]}>\r\n                <Input.Password placeholder=\"Contraseña\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"role\" rules={[{ required: true, message: 'Seleccione un rol' }]}>\r\n                <Select placeholder=\"Seleccione un rol\">\r\n                    <Select.Option value=\"user\">Usuario</Select.Option>\r\n                    <Select.Option value=\"admin\">Administrador</Select.Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\r\n                Crear Usuario\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default CreateUserForm;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\Dashboard.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":17,"column":24,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Layout, Menu } from 'antd';\r\nimport { FileSearchOutlined, LogoutOutlined, FundProjectionScreenOutlined, BookOutlined, SearchOutlined } from '@ant-design/icons';\r\nimport ScopusVerification from './ScopusVerification';\r\nimport ResearchProjects from './ResearchProjects';\r\nimport ISBNSearch from './ISBNSearch';\r\nimport ArticleSearch from './ArticleSearch'; // Importa el nuevo componente\r\n\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst Dashboard = ({ onLogout }) => {\r\n    const [selectedMenu, setSelectedMenu] = useState('scopus');\r\n\r\n    const renderContent = () => {\r\n        switch (selectedMenu) {\r\n            case 'scopus':\r\n                return <ScopusVerification />;\r\n            case 'research':\r\n                return <ResearchProjects />;\r\n            case 'isbnSearch':\r\n                return <ISBNSearch />;\r\n            case 'articleSearch': // Nuevo caso para el componente de búsqueda de artículos\r\n                return <ArticleSearch />;\r\n            default:\r\n                return <ScopusVerification />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Layout style={{ width: '1535px', height: '728px', borderRadius: '8px' }}>\r\n            <Sider width={250} collapsible style={{ backgroundColor: '#001529' }}>\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={['scopus']}\r\n                    onClick={(e) => setSelectedMenu(e.key)}\r\n                >\r\n                    <Menu.Item key=\"scopus\" icon={<FileSearchOutlined />}>\r\n                        Verificación en Scopus\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"research\" icon={<FundProjectionScreenOutlined />}>\r\n                        Proyectos de Investigación\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"isbnSearch\" icon={<BookOutlined />}>\r\n                        Búsqueda de ISBN\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"articleSearch\" icon={<SearchOutlined />}> {/* Nueva opción de menú */}\r\n                        Búsqueda de Artículos\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"logout\" icon={<LogoutOutlined />} onClick={onLogout}>\r\n                        Cerrar Sesión\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n            <Layout>\r\n                <Header style={{ backgroundColor: '#001529', color: '#fff', fontSize: '20px', textAlign: 'center' }}>\r\n                    Aplicación de Verificación en Scopus\r\n                </Header>\r\n                <Content style={{ padding: '24px', background: '#fff', overflowY: 'auto' }}>\r\n                    {renderContent()}\r\n                </Content>\r\n            </Layout>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\FileUpload.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":22,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Upload, Button, message } from 'antd';\r\nimport { UploadOutlined, DeleteOutlined } from '@ant-design/icons';\r\n\r\nconst FileUpload = ({ onUploadSuccess, onDelete, hasFile }) => {\r\n    const [file, setFile] = useState(null);\r\n\r\n    const handleFileChange = (info) => {\r\n        const selectedFile = info.file.originFileObj || info.file;\r\n\r\n        if (!selectedFile) {\r\n            message.error('Error al cargar el archivo. Por favor, intenta nuevamente.');\r\n            return;\r\n        }\r\n\r\n        setFile(selectedFile);\r\n        onUploadSuccess(selectedFile);\r\n        message.success(`Archivo ${selectedFile.name} cargado correctamente.`);\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\r\n            <Upload\r\n                onChange={handleFileChange}\r\n                beforeUpload={() => false}\r\n                showUploadList={false}\r\n                disabled={hasFile}\r\n            >\r\n                <Button icon={<UploadOutlined />} disabled={hasFile}>\r\n                    {hasFile ? 'Archivo Subido' : 'Seleccionar Archivo PDF'}\r\n                </Button>\r\n            </Upload>\r\n            {hasFile && (\r\n                <Button icon={<DeleteOutlined />} onClick={onDelete} danger>\r\n                    Eliminar Archivo\r\n                </Button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\ISBNSearch.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":50,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ISBNSearch.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport BookResults from './BookResults';\r\n\r\nconst ISBNSearch = () => {\r\n    const [isbn, setIsbn] = useState('');\r\n    const [bookResults, setBookResults] = useState({ googleBooks: null, openLibrary: null });\r\n\r\n    const handleISBNLookup = async () => {\r\n        try {\r\n            console.log(\"ISBN buscado:\", isbn);\r\n\r\n            // Solicitud al backend para Google Books API\r\n            const googleResponse = await axios.get(`http://localhost:5000/api/books/search/google`, {\r\n                params: { isbn }\r\n            });\r\n            console.log(\"Resultado de Google Books:\", googleResponse.data);\r\n\r\n            setBookResults((prevResults) => ({\r\n                ...prevResults,\r\n                googleBooks: googleResponse.data\r\n            }));\r\n\r\n            // Solicitud al backend para Open Library API\r\n            const openLibraryResponse = await axios.get(`http://localhost:5000/api/books/search/openlibrary`, {\r\n                params: { isbn }\r\n            });\r\n            console.log(\"Resultado de Open Library:\", openLibraryResponse.data);\r\n\r\n            setBookResults((prevResults) => ({\r\n                ...prevResults,\r\n                openLibrary: openLibraryResponse.data\r\n            }));\r\n        } catch (error) {\r\n            if (error.response) {\r\n                console.error(\"Error en la solicitud de ISBN - Respuesta de la API:\", error.response.data);\r\n                alert(`Error en la solicitud: ${error.response.data.error || \"Error desconocido en el servidor\"}`);\r\n            } else if (error.request) {\r\n                console.error(\"Error en la solicitud de ISBN - Sin respuesta de la API:\", error.request);\r\n                alert(\"Error en la solicitud: No hay respuesta del servidor.\");\r\n            } else {\r\n                console.error(\"Error en la solicitud de ISBN:\", error.message);\r\n                alert(`Error en la solicitud: ${error.message}`);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Búsqueda de ISBN</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={isbn}\r\n                onChange={(e) => setIsbn(e.target.value)}\r\n                placeholder=\"Ingrese el ISBN\"\r\n            />\r\n            <button onClick={handleISBNLookup}>Buscar</button>\r\n            <BookResults results={bookResults} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ISBNSearch;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\Login.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":25,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Button, Input, Form, message } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst Login = ({ onLoginSuccess }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleLogin = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/auth/login', values);\r\n            const { token } = response.data;\r\n            message.success('Inicio de sesión exitoso');\r\n            localStorage.setItem('token', token); // Guardar el token en localStorage\r\n            setLoading(false);\r\n            if (onLoginSuccess) onLoginSuccess(token); // Pasa el token a la función de éxito\r\n        } catch (error) {\r\n            message.error('Error al iniciar sesión. Verifica tus credenciales.');\r\n            console.error(error);\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n      <h2>Iniciar Sesión</h2>\r\n      <Form onFinish={handleLogin}>\r\n        <Form.Item name=\"username\" rules={[{ required: true, message: 'Ingrese su nombre de usuario' }]}>\r\n          <Input placeholder=\"Nombre de usuario\" />\r\n        </Form.Item>\r\n        <Form.Item name=\"password\" rules={[{ required: true, message: 'Ingrese su contraseña' }]}>\r\n          <Input.Password placeholder=\"Contraseña\" />\r\n        </Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">Iniciar Sesión</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\Register.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":25,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React, { useState } from 'react';\r\nimport { Button, Input, Form, message, Select } from 'antd';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nconst Register = ({ onRegisterSuccess }) => {\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleRegister = async (values) => {\r\n        setLoading(true);\r\n        try {\r\n            await axios.post('http://localhost:5000/api/auth/register', values);\r\n            message.success('Usuario registrado exitosamente');\r\n            setLoading(false);\r\n            if (onRegisterSuccess) onRegisterSuccess();\r\n        } catch (error) {\r\n            message.error('Error al registrar el usuario. Verifica los datos e inténtalo de nuevo.');\r\n            console.error('Error al registrar usuario:', error);  // Añade este log para ver el detalle\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Form onFinish={handleRegister} style={{ maxWidth: '300px', margin: '0 auto' }}>\r\n            <Form.Item name=\"username\" rules={[{ required: true, message: 'Ingrese un nombre de usuario' }]}>\r\n                <Input placeholder=\"Nombre de usuario\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"password\" rules={[{ required: true, message: 'Ingrese una contraseña' }]}>\r\n                <Input.Password placeholder=\"Contraseña\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"confirmPassword\" rules={[{ required: true, message: 'Confirme la contraseña' }]}>\r\n                <Input.Password placeholder=\"Confirmar Contraseña\" />\r\n            </Form.Item>\r\n            <Form.Item name=\"role\" rules={[{ required: true, message: 'Seleccione un rol' }]}>\r\n                <Select placeholder=\"Seleccione un rol\">\r\n                    <Option value=\"admin\">Admin</Option>\r\n                    <Option value=\"usuario\">Usuario</Option>\r\n                </Select>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading} block>\r\n                Registrarse\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\ResearchProjects.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":49,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ResearchProjects.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { Form, Input, Button, Upload, message } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nconst ResearchProjects = ({ onProjectAdded }) => {\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const onFinish = async (values) => {\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n\r\n        // Agrega los valores del formulario excepto el `score`\r\n        formData.append('name', values.name);\r\n        formData.append('description', values.description);\r\n        formData.append('type', values.type);\r\n\r\n        // Adjunta los archivos seleccionados\r\n        fileList.forEach(file => {\r\n            formData.append('images', file);\r\n        });\r\n\r\n        try {\r\n            await axios.post('http://localhost:5000/api/projects', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            message.success('Proyecto agregado con éxito');\r\n            form.resetFields();\r\n            setFileList([]);\r\n            if (onProjectAdded) onProjectAdded();\r\n        } catch (error) {\r\n            message.error('Error al agregar el proyecto');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleFileChange = ({ fileList }) => {\r\n        setFileList(fileList.map(file => file.originFileObj));\r\n    };\r\n\r\n    return (\r\n        <Form form={form} onFinish={onFinish} layout=\"vertical\">\r\n            <Form.Item name=\"name\" label=\"Nombre del Proyecto\" rules={[{ required: true, message: 'Por favor ingresa el nombre del proyecto' }]}>\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item name=\"description\" label=\"Descripción\" rules={[{ required: true, message: 'Por favor ingresa una descripción' }]}>\r\n                <Input.TextArea rows={4} />\r\n            </Form.Item>\r\n            <Form.Item name=\"type\" label=\"Tipo de Investigación\" rules={[{ required: true, message: 'Por favor selecciona el tipo de investigación' }]}>\r\n                <Input />\r\n            </Form.Item>\r\n            <Form.Item label=\"Imágenes del Proyecto\">\r\n                <Upload\r\n                    beforeUpload={() => false}\r\n                    multiple\r\n                    onChange={handleFileChange}\r\n                >\r\n                    <Button icon={<UploadOutlined />}>Seleccionar Imágenes</Button>\r\n                </Upload>\r\n            </Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                Guardar Proyecto\r\n            </Button>\r\n        </Form>\r\n    );\r\n};\r\n\r\nexport default ResearchProjects;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\ResultTable.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":14,"column":28,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport { CheckCircleTwoTone, CloseCircleTwoTone, FileTextOutlined } from '@ant-design/icons';\r\n\r\nconst ResultTable = ({ results, onVerify, onGenerateXML }) => {\r\n    const columns = [\r\n        { title: 'Nombre del Archivo', dataIndex: 'fileName', key: 'fileName' },\r\n        {\r\n            title: 'Estado en Scopus',\r\n            dataIndex: 'status',\r\n            key: 'status',\r\n            render: (status) => {\r\n                if (status === 'exists') {\r\n                    return <CheckCircleTwoTone twoToneColor=\"#52c41a\" />;\r\n                } else if (status === 'not_exists') {\r\n                    return <CloseCircleTwoTone twoToneColor=\"#ff4d4f\" />;\r\n                } else {\r\n                    return 'No verificado';\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Acciones',\r\n            key: 'action',\r\n            render: (_, record) => (\r\n                <div style={{ display: 'flex', gap: '8px' }}>\r\n                    <Button\r\n                        icon={<FileTextOutlined />}\r\n                        onClick={() => onVerify(record)}\r\n                        disabled={record.status !== 'not_checked'}\r\n                    >\r\n                        Verificar en Scopus\r\n                    </Button>\r\n                    {record.status === 'exists' && (\r\n                        <Button icon={<FileTextOutlined />} onClick={() => onGenerateXML(record)}>\r\n                            Generar XML\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return <Table columns={columns} dataSource={results} rowKey=\"fileName\" pagination={false} />;\r\n};\r\n\r\nexport default ResultTable;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\components\\ScopusVerification.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":70,"column":9,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"// src/components/ScopusVerification.js\r\n\r\nimport React, { useState } from 'react';\r\nimport FileUpload from './FileUpload';\r\nimport ResultTable from './ResultTable';\r\nimport { Button, message } from 'antd';\r\nimport axios from 'axios';\r\nimport { js2xml } from 'xml-js';\r\n\r\nconst ScopusVerification = ({ onLogout }) => {\r\n    const [results, setResults] = useState([]);\r\n\r\n    const handleUploadSuccess = (file) => {\r\n        const newResult = {\r\n            key: `${file.name}-${Date.now()}`,\r\n            fileName: file.name,\r\n            file: file,\r\n            status: 'not_checked',\r\n            data: null,\r\n        };\r\n        setResults([newResult]);\r\n    };\r\n\r\n    const handleVerify = async (record) => {\r\n        const formData = new FormData();\r\n        formData.append('pdf', record.file);\r\n    \r\n        try {\r\n            const response = await axios.post('http://localhost:5000/api/check-scopus', formData);\r\n            const existsInScopus = response.data.exists;\r\n            \r\n            const updatedResult = {\r\n                ...record,\r\n                status: existsInScopus ? 'exists' : 'not_exists', // Cambia el estado según el valor de exists\r\n                data: existsInScopus ? response.data.data : null,\r\n            };\r\n            setResults([updatedResult]);\r\n        } catch (error) {\r\n            console.error('Error al verificar el archivo en Scopus:', error);\r\n            const updatedResult = {\r\n                ...record,\r\n                status: 'not_exists',\r\n                data: null,\r\n            };\r\n            setResults([updatedResult]);\r\n        }\r\n    };\r\n    \r\n\r\n    const generateXML = (record) => {\r\n        if (!record.data) {\r\n            console.error('No hay datos para generar el XML.');\r\n            return;\r\n        }\r\n        const xmlOptions = { compact: true, ignoreComment: true, spaces: 4 };\r\n        const xmlData = js2xml(record.data, xmlOptions);\r\n        const blob = new Blob([xmlData], { type: 'application/xml' });\r\n        const link = document.createElement('a');\r\n        link.href = URL.createObjectURL(blob);\r\n        link.download = `${record.fileName}.xml`;\r\n        link.click();\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        setResults([]);\r\n        message.info('Archivo eliminado.');\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FileUpload onUploadSuccess={handleUploadSuccess} onDelete={handleDelete} hasFile={results.length > 0} />\r\n            {results.length > 0 && (\r\n                <ResultTable results={results} onVerify={handleVerify} onGenerateXML={generateXML} />\r\n            )}\r\n            <Button onClick={onLogout} style={{ marginTop: '20px' }}>Cerrar Sesión</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ScopusVerification;\r\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\index.js","messages":[{"ruleId":null,"fatal":true,"severity":2,"message":"Parsing error: Unexpected token <","line":6,"column":5,"nodeType":null}],"suppressedMessages":[],"errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n","usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\reportWebVitals.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]},{"filePath":"C:\\Users\\fupifigu\\Videos\\test_unesum\\unesum-app-final\\scopus-frontend\\src\\setupTests.js","messages":[],"suppressedMessages":[],"errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":[{"ruleId":"semi","replacedBy":[]}]}]